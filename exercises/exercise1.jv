// creating Data Pipeline from scratch

//1. Pipeline skeleton

pipeline AirportsPipeline{

    // First we define the structure of pipeline then define different blocks.
    AirportsExtractor -> AirportsTextFileInterpreter;
    AirportsTextFileInterpreter
    -> AirportsCSVInterpreter 
    -> AirportsTableInterpreter 
    -> AirportsLoader;



    // Adding different blocks to form complete structure of Pipeline
    // Extractor Block i/p:None, o/p: File
    block AirportsExtractor oftype HttpExtractor
    { 
        url: "https://opendata.rhein-kreis-neuss.de/api/explore/v2.1/catalog/datasets/rhein-kreis-neuss-flughafen-weltweit/exports/csv?lang=en&timezone=Europe%2FBerlin&use_labels=true&delimiter=%3B";
    }
    
    // above file will be interpreted as text file.
    block AirportsTextFileInterpreter oftype TextFileInterpreter{}

    // Here, we treat text file as Sheet.
    block AirportsCSVInterpreter oftype CSVInterpreter
    {
        delimiter: ';';
    }   
    // Transformer Block i/p: Sheet, o/p: Table
    
    block AirportsTableInterpreter oftype TableInterpreter
    {
        header: true;
        columns:[
            "Lfd. Nummer" oftype integer,
            "Name des Flughafens" oftype text, 
            "Ort" oftype text,
            "Land" oftype text, 
            "IATA" oftype text,
            "ICAO" oftype text,
            "Latitude" oftype decimal,
            "Longitude" oftype decimal,
            "Altitude" oftype integer,
            "Zeitzone" oftype decimal,
            "DST" oftype text,
            "Zeitzonen-Datenbank" oftype text,
            "geo_punkt" oftype text
        ];
    }

    // SQLite Loader Block i/p: Table, o/p : None
    block AirportsLoader oftype SQLiteLoader
    {
        table:"airports";
        file:"./airports.sqlite";
    }
}
















